import { Component, OnInit, NgZone } from '@angular/core';
import { NavController, Platform } from '@ionic/angular';
import { C } from '../providers/constants';
import { GlobalFunction } from '../providers/globalfunction';
import { ActivatedRoute } from '@angular/router';
import * as request from 'requestretry';
import * as moment from 'moment';
import { SocialSharing } from '@ionic-native/social-sharing/ngx';
import { ValueGlobal } from '../providers/book-service';
import { Storage } from '@ionic/storage';
/**
 * Generated class for the PolicyPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */

@Component({
  selector: 'app-blog',
  templateUrl: 'blog.html',
  styleUrls: ['blog.scss'],
})
export class BlogPage implements OnInit {
  blog;date;title;content;arrblog=[]
  blogID;urlblog;Liked=true;
  constructor(public valueGlobal:ValueGlobal,public storage: Storage,public platform: Platform, public navCtrl: NavController, public value:ValueGlobal, public gf: GlobalFunction, private activatedRoute: ActivatedRoute, public zone: NgZone, private socialSharing: SocialSharing) {
    this.blogID = this.activatedRoute.snapshot.paramMap.get('id');
     this.getdata();
    //Xử lý nút back của dt

    //google analytic
    gf.googleAnalytion('blog', 'load', '');
  }

  ngOnInit() {

  }
  getdata() {
    var se = this;
    var options = {
      method: 'GET',
      url: 'http://svc3.ivivu.com/GetBlogById',
      qs: { postid: this.blogID },
      headers:
      {
      }
    };

    request(options, function (error, response, body) {
      if (error) throw new Error(error);
      se.zone.run(() => {
        se.blog = JSON.parse(body);
        se.title=se.blog.post.post_title;
        se.date= moment(se.blog.post.post_date).format('HH:ss DD/MM/YYYY');
        // se.content ='';
        // se.content += "<label style='margin:0' style='color: #828282;font-size: 14px'>"+se.date+"</label>"
        se.content = se.blog.post.post_content;
        se.getblog();
      })

      
    });
  }
  getblog()
  {
    var se = this;
    se.storage.get('auth_token').then(auth_token => {
      if (auth_token) {
        var text = "Bearer " + auth_token;
        var options = {
          method: 'GET',
          url: C.urls.baseUrl.urlMobile + '/mobile/OliviaApis/GetFavouriteBlogByUser',
          timeout: 10000, maxAttempts: 5, retryDelay: 2000,
          headers:
          {
            'cache-control': 'no-cache',
            'content-type': 'application/json',
            authorization: text
          }
        };
        request(options, function (error, response, body) {
          if (error) {
            error.page = "hotellike";
            error.func = "getblog";
            error.param =  JSON.stringify(options);
            C.writeErrorLog(error);
            throw new Error(error)
        }
        se.zone.run(() => {
          se.arrblog = JSON.parse(body);
          for (let i = 0; i < se.arrblog.length; i++) {
            if (se.arrblog[i].id==se.blogID) {
              se.Liked=false;
              break;
            }
            
          }
        });
      });
    }
  });
}

  
  
  goback() {
    //this.navCtrl.navigateBack('/hoteldetail/'+this.HotelID);
    this.navCtrl.back();
  }
  share() {
    this.socialSharing.share(null, null, null, this.value.urlblog).then(() => {
      // Success!
    }).catch(() => {
      // Error!
    });
  }
  likeItem() {
    var se = this;
    se.storage.get('auth_token').then(auth_token => {
      if (auth_token) {
        var text = "Bearer " + auth_token;
        var options = {
          method: 'POST',
          //url: 'https://beta-olivia.ivivu.com/mobile/OliviaApis/AddFavouriteHotel',
          url: C.urls.baseUrl.urlMobile +'/mobile/OliviaApis/AddFavouriteBlog',
          timeout: 10000, maxAttempts: 5, retryDelay: 2000,
          headers:
          {
            authorization: text
          },
          body: { postId: this.blogID },
          json: true
        };

        request(options, function (error, response, body) {
          if(response.statusCode != 200){
            var objError ={
                page: "hotel-list",
                func: "likeItem",
                message : response.statusMessage,
                content : response.body,
                type: "warning",
                param: JSON.stringify(options)
              };
            C.writeErrorLog(objError);
          }
          if (error) {
            error.page="hotel-list";
            error.func="likeItem";
            error.param = JSON.stringify(options);
            C.writeErrorLog(error);
          };
          se.zone.run(() => se.setItemLikeStatus());
        });
      }
      else {
        se.valueGlobal.logingoback='TabPage';
        se.navCtrl.navigateForward('/login');
      }
    });
  }
  unlikeItem() {
    var se = this;
    se.storage.get('auth_token').then(auth_token => {
      if (auth_token) {
        var text = "Bearer " + auth_token;
        var options = {
          method: 'POST',
          //url: 'https://beta-olivia.ivivu.com/mobile/OliviaApis/RemoveFavouriteHotelByUser',
          url: C.urls.baseUrl.urlMobile +'/mobile/OliviaApis/RemoveFavouriteBlogByUser',
          timeout: 10000, maxAttempts: 5, retryDelay: 2000,
          headers:
          {
            authorization: text
          },
          body: { postId: this.blogID },
          json: true
        };

        request(options, function (error, response, body) {
          if(response.statusCode != 200){
            var objError ={
                page: "blog",
                func: "unlikeItem",
                message : response.statusMessage,
                content : response.body,
                type: "warning",
                param: JSON.stringify(options)
              };
            C.writeErrorLog(objError);
          }
          if (error) {
            error.page="blog";
            error.func="unlikeItem";
            error.param = JSON.stringify(options);
            C.writeErrorLog(error);
          };
          se.zone.run(() => se.setItemLikeStatus());
          
          console.log(body);
        });
      }
      else {
        this.navCtrl.navigateForward('/login');
      }
    });
  }
  setItemLikeStatus() {
    this.Liked = !this.Liked;
  }
  
}
