
import { Booking } from '../providers/book-service';
import { Component, ViewChild, NgZone, OnInit } from '@angular/core';
import {  NavController, ToastController,LoadingController } from '@ionic/angular';
import { RoomInfo } from '../providers/book-service';
import { C } from '../providers/constants';
import * as request from 'requestretry';
import { Storage } from '@ionic/storage';
import { GlobalFunction } from '../providers/globalfunction';
import jwt_decode from 'jwt-decode';
import { Platform, Navbar } from 'ionic-angular';
/**
 * Generated class for the RoomadddetailsPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */

@Component({
  selector: 'app-roomadddetails',
  templateUrl: 'roomadddetails.html',
  styleUrls: ['roomadddetails.scss'],
})
export class RoomadddetailsPage implements OnInit {

  ho; ten; phone=""; note; arr; roomnumber; room; ischeck: boolean; ishide;
  companyname; address; tax; addressorder; bed; bedchuoi; priceshow; ischeckpoint; ischeckbtn
  timestamp; paymentMethod; jsonroom
  public loader = this.loadingCtrl.create({
    message: "Đang xử lý...",
  });
  ngOnInit() {
  }
  @ViewChild(Navbar) navBar: Navbar;
  constructor(public platform: Platform, public navCtrl: NavController, public zone: NgZone, 
    private toastCtrl: ToastController, public Roomif: RoomInfo, public storage: Storage, public loadingCtrl: LoadingController,
    public booking: Booking, public gf: GlobalFunction) {
    this.storage.get('order').then(order => {
      this.ho = Roomif.ho;
      this.ten = Roomif.ten;
      this.phone = Roomif.phone;
      this.note = Roomif.notetotal;
      // this.companyname = Roomif.companyname;
      // this.address = Roomif.address;
      // this.tax = Roomif.tax;
      // this.addressorder = Roomif.addressorder;
      this.room = this.Roomif.arrroom;
      this.jsonroom = Roomif.jsonroom;
      this.ischeckpoint = this.Roomif.ischeckpoint;
      if (this.ischeckpoint == true) {
        if (this.Roomif.priceshow == "0") {
          this.priceshow = this.Roomif.priceshow;
        }
        else {
          this.priceshow = this.Roomif.priceshow.replace(/\./g, '').replace(/\,/g, '');
        }

      }
      else {
        this.ischeckbtn = true;
      }
      // if (this.Roomif.arrrbed.length > 1) {
      //   this.arrbed = this.Roomif.arrrbed
      // }
      // else {
      //   this.bed = this.room[0].Rooms[0].RoomInfomations.BedSummaryDisplaysMobile;
      //   if (this.bed.length > 1) {
      //     for (let i = 0; i < this.bed.length; i++) {
      //       var item;
      //       if (i == 0) {
      //         item = { text: this.bed[i], ischeck: true };
      //         this.bedchuoi = this.bed[i];
      //       }
      //       else {
      //         item = { text: this.bed[i], ischeck: false }
      //       }
      //       this.arrbed.push(item);
      //     }
      //   }
      // }
      if (Roomif.ischeck) {
        this.ischeck = Roomif.ischeck;
      }
      //Xử lý nút back của dt
      this.platform.ready().then(() => {
        this.platform.registerBackButtonAction(() => {
          //this.view.dismiss();
          // if (this.navCtrl.canGoBack()) { // CHECK IF THE USER IS IN THE ROOT PAGE.
          //   this.navCtrl.pop();// IF IT'S NOT THE ROOT, POP A PAGE.
          // } else {
          //   // IF IT'S THE ROOT, EXIT THE APP.
          //   this.platform.exitApp();
          // }
          this.platform.exitApp();
        })
      })
      if (order) {

        this.companyname = order.companyname;
        this.address = order.address;
        this.tax = order.tax;
        this.addressorder = order.addressorder;
        this.ishide = true;
        this.ischeck = true;

      } else {
        this.ishide = false;
        this.ischeck = false;
      }
    })

    // this.storage.get('address').then(address => {
    //   this.address = address
    // })
    // this.storage.get('tax').then(tax => {
    //   this.tax = tax
    // })
    // this.storage.get('addressorder').then(addressorder => {
    //   this.addressorder = addressorder
    // })
    //google analytic
    gf.googleAnalytion('roomadddetails', 'load', '');
  }
  next() {
    this.Roomif.notetotal="";
    if (this.ho && this.ten) {
      this.ho=this.ho.trim();
      this.ten=this.ten.trim();
    }
    else
    {
      this.presentToast();
      return;
    }
  
    this.clearClonePage('page-roompaymentselect');
    this.Roomif.order = "";
    if (this.ischeck) {
      if (this.ho && this.ten) {
        if (this.phonenumber(this.phone)) {
          if (this.companyname && this.address && this.tax && this.addressorder) {
            this.companyname=this.companyname.trim();
            this.address=this.address.trim();
            this.tax=this.tax.trim();
            this.addressorder=this.addressorder.trim();
          }
          else{
            this.presentToastOrder();
            return;
          }
          if (this.companyname && this.address && this.tax && this.addressorder) {
            this.Roomif.ho = this.ho;
            this.Roomif.ten = this.ten;
            this.Roomif.phone = "0"+ this.phone;
            this.Roomif.companyname = this.companyname;
            this.Roomif.address = this.address;
            this.Roomif.tax = this.tax;
            this.Roomif.notetotal = this.note;
            this.Roomif.addressorder = this.addressorder;
            var order1 = { companyname: this.companyname, address: this.address, tax: this.tax, addressorder: this.addressorder }
            this.storage.set("order", order1);
            this.Roomif.order = this.companyname + "," + this.address + "," + this.tax + "," + this.addressorder
            // if (this.arrbed.length > 1) {
            //   for (let i = 0; i < this.arrbed.length; i++) {
            //     if (this.arrbed[i].ischeck) {
            //       this.bedchuoi = this.arrbed[i].text;
            //     }
            //   }
            // }
            // this.Roomif.bed = this.bedchuoi;
            // if (this.note && this.bedchuoi) {
            //   this.Roomif.notetotal = this.note + "," + this.bedchuoi;
            // }
            // else {
            //   if (this.note) {
            //     this.Roomif.notetotal = this.note;
            //   }
            //   else if (this.bedchuoi) {
            //     this.Roomif.notetotal = this.bedchuoi;
            //   }
            // }
            this.Roomif.notetotal = this.note;
            this.Roomif.ischeck = this.ischeck;
            //this.Roomif.arrrbed = this.arrbed;
            console.log(this.Roomif.notetotal);
            this.navCtrl.navigateForward("roompaymentselect");
          } else {
            this.presentToastOrder();
          }

        } else {
          this.presentToastPhone();
        }
      } else {
        this.presentToast();
      }
    } else {
      if (this.ho && this.ten) {
        if (this.phonenumber(this.phone)) {
          this.Roomif.ho = this.ho;
          this.Roomif.ten = this.ten;
          this.Roomif.phone = "0"+ this.phone;
          this.Roomif.notetotal = this.note;
          this.Roomif.ischeck = this.ischeck;
          this.clearClonePage('page-roompaymentselect');
          // if (this.arrbed.length > 1) {
          //   for (let i = 0; i < this.arrbed.length; i++) {
          //     if (this.arrbed[i].ischeck) {
          //       this.bedchuoi = this.arrbed[i].text;
          //     }
          //   }
          // }
          // this.Roomif.bed = this.bedchuoi;
          // if (this.note && this.bedchuoi) {
          //   this.Roomif.notetotal = this.note + "," + this.bedchuoi;
          // }
          // else {
          //   if (this.note) {
          //     this.Roomif.notetotal = this.note;
          //   }
          //   else if (this.bedchuoi) {
          //     this.Roomif.notetotal = this.bedchuoi;
          //   }
          // }
          // this.Roomif.arrrbed = this.arrbed;
          this.Roomif.notetotal = this.note;
          console.log(this.Roomif.notetotal);
          this.navCtrl.navigateForward("roompaymentselect");
        } else {
          this.presentToastPhone();
        }
      } else {
        this.presentToast();
      }
    }
  }
  next1() {
    this.Roomif.notetotal="";
    if (this.ho && this.ten) {
      this.ho=this.ho.trim();
      this.ten=this.ten.trim();
    }
    else
    {
      this.presentToast();
      return;
    }
    this.Roomif.order = "";
    this.clearClonePage('page-roompaymentdoneean');
    if (this.ischeck) {
      if (this.ho && this.ten) {
        if (this.phonenumber(this.phone)) {
          if (this.companyname && this.address && this.tax && this.addressorder) {
            this.companyname=this.companyname.trim();
            this.address=this.address.trim();
            this.tax=this.tax.trim();
            this.addressorder=this.addressorder.trim();
          }
          else{
            this.presentToastOrder();
            return;
          }
          if (this.companyname && this.address && this.tax && this.addressorder) {
            this.Roomif.ho = this.ho;
            this.Roomif.ten = this.ten;
            this.Roomif.phone = "0"+ this.phone;
            this.Roomif.companyname = this.companyname;
            this.Roomif.address = this.address;
            this.Roomif.tax = this.tax;
            this.Roomif.notetotal = this.note;
            this.Roomif.addressorder = this.addressorder;
            var order1 = { companyname: this.companyname, address: this.address, tax: this.tax, addressorder: this.addressorder }
            this.storage.set("order", order1);
            this.Roomif.order = this.companyname + "," + this.address + "," + this.tax + "," + this.addressorder
            // if (this.arrbed.length > 1) {
            //   for (let i = 0; i < this.arrbed.length; i++) {
            //     if (this.arrbed[i].ischeck) {
            //       this.bedchuoi = this.arrbed[i].text;
            //     }
            //   }
            // }
            // this.Roomif.bed = this.bedchuoi;
            // if (this.note && this.bedchuoi) {
            //   this.Roomif.notetotal = this.note + "," + this.bedchuoi;
            // }
            // else {
            //   if (this.note) {
            //     this.Roomif.notetotal = this.note;
            //   }
            //   else if (this.bedchuoi) {
            //     this.Roomif.notetotal = this.bedchuoi;
            //   }
            // }
            this.Roomif.notetotal = this.note;
            this.Roomif.ischeck = this.ischeck;
            // this.Roomif.arrrbed = this.arrbed;
            console.log(this.Roomif.notetotal);
            this.pushdata();
          } else {
            this.presentToastOrder();
          }

        } else {
          this.presentToastPhone();
        }
      } else {
        this.presentToast();
      }
    } else {
      if (this.ho && this.ten) {
        if (this.phonenumber(this.phone)) {
          this.Roomif.ho = this.ho;
          this.Roomif.ten = this.ten;
          this.Roomif.phone = "0"+ this.phone;
          this.Roomif.notetotal = this.note;
          this.Roomif.ischeck = this.ischeck;
          this.clearClonePage('page-roompaymentdoneean');
          // if (this.arrbed.length > 1) {
          //   for (let i = 0; i < this.arrbed.length; i++) {
          //     if (this.arrbed[i].ischeck) {
          //       this.bedchuoi = this.arrbed[i].text;
          //     }
          //   }
          // }
          // this.Roomif.bed = this.bedchuoi;
          // if (this.note && this.bedchuoi) {
          //   this.Roomif.notetotal = this.note + "," + this.bedchuoi;
          // }
          // else {
          //   if (this.note) {
          //     this.Roomif.notetotal = this.note;
          //   }
          //   else if (this.bedchuoi) {
          //     this.Roomif.notetotal = this.bedchuoi;
          //   }
          // }
          // this.Roomif.arrrbed = this.arrbed;
          this.Roomif.notetotal = this.note;
          console.log(this.Roomif.notetotal);
          this.pushdata();

        } else {
          this.presentToastPhone();
        }
      } else {
        this.presentToast();
      }
    }
  }
  pushdata() {
    this.presentLoading();
    var se = this;
    var arrMealTypeRates = [];
    var room1 = [];
    arrMealTypeRates.push(this.room[0].MealTypeRates[this.booking.indexmealtype]);
    var itemroom1 = {
      Penalty_Type: this.room[0].Rooms[0].Penalty_Type, RoomID: this.room[0].Rooms[0].RoomID, RoomPriceBreak: this.room[0].Rooms[0].RoomPriceBreak,
      SupplierRef: this.room[0].Rooms[0].SupplierRef, SalesTax: this.room[0].Rooms[0].SalesTax
    }
    room1.push(itemroom1);
    this.jsonroom.RoomClasses = this.room;
    this.jsonroom.RoomClasses[0].MealTypeRates = arrMealTypeRates;
    this.jsonroom.RoomClasses[0].Rooms = room1;
    this.jsonroom.RoomClassesHidden = [];
    this.booking.Hotels = this.jsonroom
    this.timestamp = Date.now();
    this.storage.get('auth_token').then(auth_token => {
      if (auth_token) {
        var Invoice = 0;
        if (se.Roomif.order) {
          Invoice = 1;
        }
        var options = {
          method: 'POST',
          url: C.urls.baseUrl.urlPost + '/mInsertBooking',
          timeout: 10000, maxAttempts: 5, retryDelay: 2000,
          headers:
          {
            'content-type': 'application/json'
          },
          body:
          {
            RoomClassObj: se.booking.Hotels.RoomClasses[0].ListObjRoomClass,
            CName: se.Roomif.ho + " " + se.Roomif.ten,
            CEmail: se.booking.CEmail,
            CPhone: se.Roomif.phone,
            timestamp: se.timestamp,
            HotelID: se.booking.HotelId,
            paymentMethod: "51",
            note: se.Roomif.notetotal,
            source: '8',
            MemberToken: auth_token,
            Customers: se.Roomif.arrcustomer,
            UsePointPrice: se.Roomif.pricepoint,
            NoteCorp: se.Roomif.order,
            Invoice: Invoice,
            UserPoints: se.Roomif.point,
            CheckInDate: se.booking.Hotels.CheckInDate,
            CheckOutDate: se.booking.Hotels.CheckOutDate,
            TotalNight: se.booking.Hotels.TotalNight,
            MealTypeIndex: this.booking.indexmealtype
          },
          json: true
        };
        console.log(JSON.stringify(options.body));
        request(options, function (error, response, body) {
          if (response.statusCode != 200) {
            var objError = {
              page: "roomadddetails",
              func: "next",
              message: response.statusMessage,
              content: response.body,
              type: "warning"
            };
            C.writeErrorLog(objError);
          }
          if (error) {
            error.page = "roomadddetails";
            error.func = "next";
            C.writeErrorLog(error);
          };
          // var rs = JSON.parse(body);
          if (body.error == 0) {
            //console.log(body.code);
           // var value = { BookingCode: body.code, total: se.Roomif.pricepoint ,ischeck:'1'};
            //se.closeLoading();
            var id= body.code;
            var total= se.Roomif.pricepoint;
            var ischeck='1' 
             se.clearClonePage('page-roompaymentdoneean');
             se.navCtrl.navigateForward('/roompaymentdoneean/'+id+'/'+total+'/'+ischeck);
          }
          else
          {
            alert(body.Msg);
            se.refreshToken();
            //se.navCtrl.popToRoot();
            //se.app.getRootNav().getActiveChildNav().select(0);
          }
        });

      }
    })
  }
  refreshToken() {
    var se = this;
    se.storage.get('auth_token').then(auth_token => {
      if (auth_token) {
        var text = "Bearer " + auth_token;
        var options = {
          method: 'GET',
          url: C.urls.baseUrl.urlMobile + '/api/Account/reloadTokenClaims',
          headers:
          {
            'cache-control': 'no-cache',
            'content-type': 'application/json',
            authorization: text
          },
        }
        request(options, function (error, response, body) {
          if (response.statusCode != 200) {
            var objError = {
              page: "roompaymentdoneean",
              func: "refreshToken",
              message: response.statusMessage,
              content: response.body,
              type: "warning"
            };
            C.writeErrorLog(objError);
          }
          if (error) {
            error.page = "roompaymentdoneean";
            error.func = "refreshToken";
            C.writeErrorLog(error);
          } else {
            var au = JSON.parse(body);
            se.zone.run(() => {
              se.storage.remove('auth_token');
              se.storage.set('auth_token', au.auth_token);
              var decoded = jwt_decode(au.auth_token);
              se.storage.remove('point');
              se.storage.set('point', decoded.point);
              se.navCtrl.navigateForward('/hoteldetail/'+this.booking.HotelId);
            })
          }
        })
      }
    })
  }
  async presentToasterror() {
    let toast = await this.toastCtrl.create({
      message: "Số điểm không đủ để tạo booking",
      duration: 3000,
      position: 'top'
    });
    
    toast.present();
  }
  async presentToast() {
    let toast = await this.toastCtrl.create({
      message: "Xin vui lòng nhập họ tên",
      duration: 3000,
      position: 'top'
    });
    toast.present();
  }
  async presentToastPhone() {
    let toast = await this.toastCtrl.create({
      message: "Số điện thoại không đúng",
      duration: 3000,
      position: 'top'
    });
    toast.present();
  }
  async presentToastOrder() {
    let toast =await this.toastCtrl.create({
      message: "Xin vui lòng nhập thông tin xuất hóa đơn",
      duration: 3000,
      position: 'top'
    });

    toast.present();
  }
  edit(co) {
    this.zone.run(() => {
      if (co == 0) {
        if (this.ischeck) {
          this.ishide = false;
        } else {
          this.ishide = true;
        }
      }
      else {
        this.ishide = false;
        this.ischeck = true;
      }
    })

  }
  ionViewDidLoad() {
    this.navBar.backButtonClick = (e: UIEvent) => {
      // todo something
      //this.clearClonePage('page-roomdetailreview');
      //this.navCtrl.push("RoomdetailreviewPage");
      this.navCtrl.pop();
    }
  }
  clearClonePage(pagename) {
    //Xóa clone do push page
    let elements = [];
    elements = Array.from(document.querySelectorAll(pagename));
    if (elements != null && elements.length > 0) {
      elements.forEach(el => {
        if (el != null && el.length > 0) {
          el.remove();
        }
      });
    }
  }
  async presentLoading() {
    var loader = await this.loadingCtrl.create({
      message: "Đang xử lý...",
      duration:2000
    });
    loader.present();
  }

  phonenumber(inputtxt) {
    var test="0"+inputtxt;
    var test1=test.toString().length;
    if (inputtxt) {
      if (test1==10) {
        return true;
      }
      else {
        return false;
      }
    }
    else
    {
      return false;
    }
   
  }
  goback(){
    this.navCtrl.pop();
  }
}
