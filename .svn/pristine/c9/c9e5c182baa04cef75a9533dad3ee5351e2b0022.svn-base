import { Component, NgZone,OnInit } from '@angular/core';
import { NavController,Platform } from '@ionic/angular';
import { Validators, FormBuilder, FormGroup } from '@angular/forms';
import { AuthService } from '../providers/auth-service';
import { Storage } from '@ionic/storage';
import { ToastController } from '@ionic/angular';
import * as request from 'requestretry';
import jwt_decode from 'jwt-decode';
import { App } from 'ionic-angular/components/app/app';
import { ValueGlobal } from '../providers/book-service';
import { C } from '../providers/constants';
import { GlobalFunction } from '../providers/globalfunction';
import { Keyboard } from '@ionic-native/keyboard/ngx';
@Component({
  selector: 'app-loginusername',
  templateUrl: 'loginusername.html',
  styleUrls: ['loginusername.scss'],
})

export class LoginusernamePage implements OnInit {
  public loginData: FormGroup;
  constructor(public platform: Platform,public valueGlobal:ValueGlobal,public navCtrl: NavController, public formBuilder: FormBuilder, public authService: AuthService, public storage: Storage,
    private toastCtrl: ToastController,public zone: NgZone,public gf: GlobalFunction) {
    this.loginData = this.formBuilder.group({
      email: ['', Validators.compose([Validators.required])],
      password: ['', Validators.compose([Validators.required, Validators.minLength(6)])],
    });
  }
  ngOnInit() {
  }
  logintk() {
    var se=this;
    var options = {
      method: 'POST',
      url: C.urls.baseUrl.urlMobile +'/api/Account/Login',
      timeout: 10000, maxAttempts: 5, retryDelay: 2000,
      headers:
      {
        'cache-control': 'no-cache',
        'content-type': 'application/json'
      },
      body:
      {
        emailOrPhone: this.loginData.value.email,
        password: this.loginData.value.password,
        rememberMe: true
      },
      json: true
    };

    request(options, function (error, response, body) {
      if (error) {
        error.page = "loginusername";
        error.func = "logintk";
        C.writeErrorLog(error);
      };
      // var result=JSON.parse(body);
      if (body.auth_token) {
        var decoded = jwt_decode(body.auth_token);
        // console.log(decoded);
        // se.storage.set("user", decoded.role);
        // se.storage.set("nameid", decoded.nameid);
        se.zone.run(()=>{
        se.storage.set("email", decoded.email);
        se.storage.set("auth_token", body.auth_token);
        se.storage.set("username",decoded.fullname);  
        if(Array.isArray(decoded.jti))
        {
          se.storage.set("jti", decoded.jti[0]);
        }
        else{
          se.storage.set("jti", decoded.jti);
        } 
        se.storage.set("point", decoded.point);
        se.navCtrl.navigateRoot('/');
      },10)

      }
      else {
        se.presentToast();
      }
    });

    // this.authService.login(this.loginData.value)
    //   .then(() => this.redirectToHome())
    //   .catch(e => console.log("login error", e));;

    //google analytic
    this.gf.googleAnalytion('loginusername','login','');
  }
  
  redirectToHome() {
    this.storage.get('id_token').then(id_token => {
      if (id_token !== null) {
        // this.storage.get('user').then(user => {
        //   this.id = user.id,
        //     this.user = user.username
        // });
        // this.toUser = {
        //   UserId: this.id,
        //   UserName: this.user,
        // }
        //this.navCtrl.push('QuestionContactPage');
      }
      else {
        this.presentToast();
      }
    });
  }
  async presentToast() {
    let toast = await this.toastCtrl.create({
      message: "Email hoặc mật khẩu không đúng.",
      duration: 3000,
      position: 'top'
    });
   
    toast.present();
  }

  ionViewDidEnter(){
    //Xử lý nút back của dt
  //   this.platform.ready().then(() => {
  //     this.platform.registerBackButtonAction(() => {
  //       if(this.navCtrl.canGoBack()){
  //         this.view.dismiss();
  //       }else{
  //         this.platform.exitApp();
  //       }
  //     })
  // })
  }

  goback(){
    // if(this.navCtrl.canGoBack()){
    //   this.view.dismiss();
    // }else{
    //   this.platform.exitApp();
    // }
    this.navCtrl.pop();
  }
}
